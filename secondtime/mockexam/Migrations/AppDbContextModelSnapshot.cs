// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mockexam.Data;

#nullable disable

namespace mockexam.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("mockexam.Models.Laptop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("DisplaySize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GpuBrand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GpuType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsTouchScreen")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumCores")
                        .HasColumnType("int");

                    b.Property<string>("NumThreads")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PrimaryStorageCapacity")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryStorageType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProcessorBrand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProcessorTier")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RamMemory")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ResolutionHeight")
                        .HasColumnType("int");

                    b.Property<int>("ResolutionWidth")
                        .HasColumnType("int");

                    b.Property<int>("SecondaryStorageCapacity")
                        .HasColumnType("int");

                    b.Property<string>("SecondaryStorageType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("YearOfWarranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Laptops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Dell",
                            DisplaySize = 13.3m,
                            GpuBrand = "NVIDIA",
                            GpuType = "GeForce GTX 1650",
                            IsTouchScreen = true,
                            Model = "XPS 13",
                            NumCores = 4,
                            NumThreads = "8",
                            OS = "Windows 10",
                            Price = 999.99m,
                            PrimaryStorageCapacity = 512,
                            PrimaryStorageType = "SSD",
                            ProcessorBrand = "Intel",
                            ProcessorTier = "Core i7",
                            RamMemory = 16,
                            Rating = 5,
                            ResolutionHeight = 1080,
                            ResolutionWidth = 1920,
                            SecondaryStorageCapacity = 1000,
                            SecondaryStorageType = "HDD",
                            YearOfWarranty = 2
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Apple",
                            DisplaySize = 13.3m,
                            GpuBrand = "Apple",
                            GpuType = "Integrated",
                            IsTouchScreen = false,
                            Model = "MacBook Pro",
                            NumCores = 8,
                            NumThreads = "16",
                            OS = "macOS Big Sur",
                            Price = 1999.99m,
                            PrimaryStorageCapacity = 512,
                            PrimaryStorageType = "SSD",
                            ProcessorBrand = "Apple",
                            ProcessorTier = "M1",
                            RamMemory = 16,
                            Rating = 5,
                            ResolutionHeight = 1600,
                            ResolutionWidth = 2560,
                            SecondaryStorageCapacity = 0,
                            SecondaryStorageType = "None",
                            YearOfWarranty = 1
                        });
                });

            modelBuilder.Entity("mockexam.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CustomerAdress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("QuantityLaptop")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReservationId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            CustomerAdress = "123 Main St, Cityville",
                            CustomerEmail = "johndoe@hotmail.com",
                            CustomerName = "John Doe",
                            CustomerPhone = "123-456-7890",
                            QuantityLaptop = 100m,
                            TotalPrice = 999.99m
                        },
                        new
                        {
                            ReservationId = 2,
                            CustomerAdress = "456 Elm St, Townsville",
                            CustomerEmail = "janesmith@gmail.com",
                            CustomerName = "Jane Smith",
                            CustomerPhone = "987-654-3210",
                            QuantityLaptop = 50m,
                            TotalPrice = 1999.99m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
